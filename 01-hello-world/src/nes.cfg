# CC65 Configuration file

# MEMORY section: Describes the NES memory layout of the final
# program.
#
# The built binary is in the NES 2.0 file format, which is required
# for the program to be run in an NES emulator. The first bytes are
# the HEADER bytes and they indicate what other areas exist in the
# file and determine some additional aspects of the program,
# including its mapper type and mirroring type. The area names used
# (e.g., HEADER, ROM) are arbitrary. Their order is determined by
# the NES 2.0 file format.
# See https://wiki.nesdev.com/w/index.php/INES for more information.
#
# All of the memory areas declared below are read only ('ro') and
# get zero-initialised by the linker.

MEMORY {
  HEADER:
    start = $0000
    size = $0010
    type = ro
    fill = yes
    fillval = 0;
  ROM:
    start = $C000
    size = $4000
    type = ro
    fill = yes
    fillval = 0;
  CHR:
    start = $0000
    size = $2000
    type = ro
    fill = yes
    fillval = 0;
}

# SEGMENTS section: Describes the segments and how they map to
# the memory areas.
# 
# Each segment gets written to the binary at the specified
# position ('start') within the specified memory area ('load').
# The default start position is $0000.

SEGMENTS {
  HEADER:
    load = HEADER
    type = ro;
  CODE:
    load = ROM
    type = ro;
  VECTORS:
    load = ROM
    type = ro
    start = $FFFA;
  CHRROM:
    load = CHR
    type = ro;
}
